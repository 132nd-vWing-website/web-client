{"version":3,"file":"./chunks/1.chunk.js","sources":["webpack:///./src/pdf/pdfBuilder.js"],"sourcesContent":["import pdfMake from 'pdfmake/build/pdfmake';\nimport Bahnschrift from './fonts/bahnschrift';\n\n/** sub-classes */\nimport mdc from './mdc';\n\n/** Fonts */\npdfMake.vfs = { ...Bahnschrift };\n\n/**\n * The pieces that make up the various pdf templates are broken down to 'components' in\n * order to make templating PDFs a little bit easier. These components are then used to put\n * together a document definition and create a PDF. This also exposes those components\n * and make them reusable.\n *\n * @exports pdfBuilder               - root class for all templates\n * @exports pdfBuilder.mdc           - root class for all MDCs\n */\nconst pdfBuilder = {\n  mdc,\n};\n\n/**\n * Generates and returns a pdfMake Object (PDF)\n * @param {string} title - Page/filename\n * @param {array} content - An array of makePDF content\n */\n\npdfBuilder.makePdf = (title, content) => {\n  const docDefinition = {\n    info: {\n      title,\n      author: '132nd vWing',\n      subject: 'Flight Planning',\n    },\n    pageSize: 'A4',\n    pageMargins: 5,\n    defaultStyle: {\n      font: 'Bahnschrift',\n      fontSize: 11,\n    },\n    content,\n  };\n\n  // Set fonts\n  pdfMake.fonts = {\n    Bahnschrift: {\n      normal: 'Bahnschrift.ttf',\n      bold: 'Bahnschrift.ttf',\n      italics: 'Bahnschrift.ttf',\n      bolditalics: 'Bahnschrift.ttf',\n    },\n  };\n\n  // Compile and return PDF\n  const pdf = pdfMake.createPdf(docDefinition);\n  return pdf;\n};\n\nexport { mdc };\nexport default pdfBuilder;\n"],"mappings":"AAAA","sourceRoot":""}