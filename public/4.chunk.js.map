{"version":3,"file":"4.chunk.js","sources":["webpack:///./src/components/headercarousel/HeaderCarousel.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Carousel } from 'antd';\n\nimport { getSliders } from '../../actions/staticsActions';\n\nimport './style.css';\n\n/** These should be loaded via the API in the future! Used to display a random image for each slide */\nimport slider1 from '../../img/sliders/slider1.png';\nimport slider2 from '../../img/sliders/slider2.png';\nimport slider3 from '../../img/sliders/slider3.png';\nimport slider4 from '../../img/sliders/slider4.png';\nimport slider5 from '../../img/sliders/slider5.png';\n\nconst sliders = [slider1, slider2, slider3, slider4, slider5];\n\n/**\n * HeaderCarousel Component\n * @param {function} fetchSlides Function used for getting slides\n * @param {array} slides An array of slides to display\n */\nclass HeaderCarousel extends Component {\n  componentDidMount() {\n    const { fetchSlides } = this.props;\n    fetchSlides();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { slides } = this.props;\n    if (slides !== nextProps.slides) return true;\n    return false;\n  }\n\n  sortSlides = (slides) => {\n    slides.sort((a, b) => {\n      if (a.index > b.index) return -1;\n      if (a.index < b.index) return 1;\n      return 0;\n    });\n  };\n\n  render() {\n    const { slides } = this.props;\n\n    const carouselitems = slides.map((slide) => {\n      const randSlider = sliders[Math.floor(Math.random() * sliders.length)];\n      return (\n        <CarouselItem key={slide._id} title={slide.heading} body={slide.body} imgUrl={randSlider} />\n      );\n    });\n\n    return (\n      <Carousel effect='fade' autoplay lazyLoad>\n        {carouselitems}\n      </Carousel>\n    );\n  }\n}\n\nHeaderCarousel.propTypes = {\n  fetchSlides: PropTypes.func.isRequired,\n  slides: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  slides: state.statics.frontpageSliders,\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchSlides: getSliders },\n)(HeaderCarousel);\n\n/**\n * CarouselItem Component\n * @param {string} title\n * @param {string} body\n * @param {string} imgUrl\n */\nconst CarouselItem = (props) => {\n  const { title, body, imgUrl } = props;\n\n  return (\n    <div\n      className='header-carousel-item'\n      style={{\n        background: `url(${imgUrl})  center center no-repeat`,\n        backgroundSize: 'cover',\n      }}>\n      <div>\n        <h1>{title}</h1>\n        <h3>{body}</h3>\n      </div>\n    </div>\n  );\n};\n\nCarouselItem.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n  imgUrl: PropTypes.string,\n};\n\nCarouselItem.defaultProps = {\n  title: '',\n  body: '',\n  imgUrl: '',\n};\n"],"mappings":"AAAA","sourceRoot":""}