{"version":3,"file":"6.chunk.js","sources":["webpack:///./src/components/registration/Register.jsx"],"sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n\n/** UI Components */\nimport { Card, Row, Col, Steps, Button, message } from 'antd';\n\n/** Components */\nimport RegisterStep from './RegisterStep';\nimport LoginStep from './LoginStep';\nimport ProfileStep from './ProfileStep';\n\nconst { Step } = Steps;\n\n/**\n * Register Component\n */\nclass Register extends Component {\n  state = {\n    current: 0,\n    errors: {},\n  };\n\n  onNext = () => {\n    const { current } = this.state;\n\n    /** Should wait with incrementing until profile is ACTUALLY created */\n    this.setState({ current: current + 1 });\n  };\n\n  onPrev = () => {\n    /* Most likely need to have own functions pr. step and then trigger them from here based on state.current */\n    const { current } = this.state;\n    this.setState({ current: current - 1 });\n  };\n\n  render() {\n    const { current, errors } = this.state;\n\n    const steps = [\n      {\n        title: 'Register',\n        content: <RegisterStep stepKey={0} currentStep={current} onNext={this.onNext} />,\n      },\n      {\n        title: 'Log In',\n        content: <LoginStep stepKey={1} currentStep={current} onNext={this.onNext} />,\n      },\n      {\n        title: 'Create Profile',\n        content: <ProfileStep stepKey={2} currentStep={current} onPrev={this.onPrev} />,\n      },\n    ];\n\n    const contentStyle = {\n      margin: '1em 0',\n    };\n\n    let disableNext = false;\n    if (Object.keys(errors).length > 0) disableNext = true;\n\n    return (\n      <Card title='Profile'>\n        <Row>\n          <Col className='gutter-row' span={24} md={24}>\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <div style={contentStyle}>{steps[current].content}</div>\n            {/* <div className='steps-action'>\n              {current < steps.length - 1 && (\n                <Button type='primary' disabled={disableNext} onClick={() => this.onNext()}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button\n                  type='primary'\n                  disabled={disableNext}\n                  onClick={() => message.success('Processing complete!')}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ marginLeft: 8 }} onClick={() => this.onPrev()}>\n                  Previous\n                </Button>\n              )}\n            </div> */}\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n}\n\n// Register.propTypes = {\n//   auth: PropTypes.object.isRequired,\n//   errors: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   auth: state.auth,\n//   errors: state.errors,\n// });\n\n// export default connect(\n//   mapStateToProps,\n//   {},\n// )(Register);\n\nexport default Register;\n"],"mappings":"AAAA","sourceRoot":""}